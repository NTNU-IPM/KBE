;-------------------------------------------------------------------------------------------------------------
; Class: analysis-link-model-class
; Used for creating objects for writing to the nastran bdf file.
; Can also be used to set up a load case for use in an AML analysis
;-------------------------------------------------------------------------------------------------------------
(define-class analysis-link-model-class
  :inherit-from (analysis-model-class)
  :properties (
               mesh-model-object 				nil ;;This property is set as a link-mesh-class
			   link-model						nil ;;link-model-class
               mesh-database-object 			(get-mesh-database ^mesh-model-object)
			   export-surface? 					(default t)
               
               ;z-load 							(default -100.0)
               ;analysis-type 					:linear-static
               ;load-case-objects-list 			(list ^load-case-1)
               material-catalog-object 			^material-catalog
               materials-list 					(list (the material-name (:from ^material-selection)))
               property-set-objects-list 		(progn 
													(change-aluminum-properties !material-catalog)
													(change-steel-properties !material-catalog)
													(if ^export-surface?
														(list ^link-2D-material-properties)
														(list ^link-3D-material-properties)
													)
												)
               
			   element-set-2d-objects-list 		(if ^export-surface? 
													(list ^link-analysis-surface-elements) nil)
			   element-set-3d-objects-list 		(if ^export-surface? 
													nil (list ^link-analysis-solid-elements))
				
				
               mesh-object 						(the link-mesh (:from ^mesh-model-object))
               node-set-objects-list 			(list (the node-set (:from ^mesh-model-object)))
			   
			   rigid-body-element-objects-list	(get-rigid-body-element-objects-list ^mesh-model-object)
			   
			   (material-selection :class 'option-property-class
					options-list	(children ^^material-catalog)
					labels-list 	(loop for material in (children ^^material-catalog)
										collect (the material-name (:from material))
										)
					mode 			'menu
					formula 		(default (the material-catalog steel))
					label 			"Select Material"
					)
				
               )
  :subobjects (
               (material-catalog :class 'material-catalog-class
                   )
               (link-2D-material-properties :class 'analysis-property-set-2d-type-1-class
                   material-catalog-object	^^material-catalog
				   material-name 			(write-to-string (the material-name (:from ^material-selection)))
                   thickness				(/ (get-smallest-mesh-size ^^link-model) 2.5)
				   )
               (link-3D-material-properties :class 'analysis-property-set-3d-type-1-class
					material-catalog-object	^^material-catalog
				    material-name 			(write-to-string (the material-name (:from ^material-selection)))
					)
               (link-analysis-surface-elements :class 'analysis-element-set-2d-type-1-class
                   query-objects-list	(get-link-surface-mesh-elements-query-objects-list ^^mesh-model-object)
                   property-set-object 	^^link-2D-material-properties
				   )
               (link-analysis-solid-elements :class 'analysis-element-set-3d-type-1-class
                   query-objects-list	(get-link-solid-mesh-elements-query-objects-list ^^mesh-model-object)
                   property-set-object 	^^link-3D-material-properties
                   )
               
			   (fixed-nodes-constraint :class 'analysis-constraint-displacement-class
                   target-object (the fixed-nodes (:from ^^mesh-model-object))
                   tx 0.0
                   ty 0.0
                   tz 0.0
                   mx 0.0
                   my 0.0
                   mz 0.0
                   )
               (nodal-load :class 'analysis-load-force-nodal-class
                   target-object (the loaded-nodes
                                   (:from ^^mesh-model-object))
                   load-vector (list 0.0 0.0 ^^z-load)
                   )
               (load-case-1 :class 'analysis-load-case-class
;;;                    load-objects-list (list ^nodal-load)
;;;                    constraint-objects-list (list ^^fixed-nodes-constraint)
				   )
               (nastran-interface :class 'nastran-analysis-class
                   analysis-model-object ^superior
                   model-name (format nil "~a - ~a" (the folder (:from ^^mechanism-selection)) 
								(the version-name (:from ^^version-selection)))
                   nastran-file-name (concatenate (write-to-string (object-name ^^superior)) ".bdf")
                   nastran-version (nth 2 '(:nei-nastran :msc-nastran :nx-nastran)) 
				   ;; could write 'nastran-version :nx-nastran' but this also shows the available versions
                   )
               )
  )
  
(define-method get-material-type analysis-link-model-class ()
	!material-selection
)

(define-method get-yield-strength material-class ()
	(if (nth 4 !material-properties)
		(nth 1 (nth 4 !material-properties))
		(progn 
			(change-steel-properties !superior)
			(nth 1 (nth 4 !material-properties))
		)
	)
)

;------------------------------------------------------------
; Method for circumventing AML bug when writing to bdf.
; Manually overwriting all material-properties for steel, 
; as well as adding the yield strength for Steel, API 5L X65.
;------------------------------------------------------------
(define-method change-steel-properties material-catalog-class ()
	(unless (nth 1 (nth 4 (the steel material-properties)))
		(change-value (the steel material-properties)
					(list (list 'elastic-modulus 9.9E7 (list 'N (list 'm -2)) "youngs modulus") 
						(list 'poissons-ratio 0.29 'nil "") 
						(list 'mass-density 7.85 (list 'kg (list 'cm -3)) "") 
						(list 'shear-modulus 7.7E7 (list 'N (list 'm -2)) "")
						(list 'yield-strength 4.48E5 (list 'N (list 'm -2)) "")
					)
		)
	)
)

;-----------------------------------------------------------
; Method for circumventing AML bug when writing to bdf.
; Manually overwriting all material-properties for aluminum, 
; as well as adding the yield strength for Aluminum 6061-T6
;-----------------------------------------------------------
(define-method change-aluminum-properties material-catalog-class ()
	(unless (nth 1 (nth 4 (the aluminum material-properties)))
		(change-value (the aluminum material-properties)
					(list (list 'elastic-modulus 6.89E7 (list 'N (list 'm -2)) "youngs modulus") 
						(list 'poissons-ratio 0.33 'nil "") 
						(list 'mass-density 2.72 (list 'kg (list 'cm -3)) "") 
						(list 'shear-modulus 2.6E7 (list 'N (list 'm -2)) "")
						(list 'yield-strength 2.76E5 (list 'N (list 'm -2)) "")
					)
		)
	)
)
  
(define-method property-classification-list analysis-link-model-class ()
  (list
   (list "Input Properties"
         '(
			material-selection
           ) 
         )
   )
  )
;-------------------------------------------------------------------------------------------------------------
; END analysis-link-model-class definitions
;-------------------------------------------------------------------------------------------------------------