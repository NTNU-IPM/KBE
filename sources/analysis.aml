;-------------------------------------------------------------------------------------------------------------
; Class: analysis-link-model-class
; Used for creating objects for writing to the nastran bdf file.
; Can also be used to set up a load case for use in an AML analysis
;-------------------------------------------------------------------------------------------------------------
(define-class analysis-link-model-class
  :inherit-from (analysis-model-class)
  :properties (
               mesh-model-object 				nil ;;This property is set as a link-mesh-class
               mesh-database-object 			^^mesh-database
               
               z-load 							(default -100.0)
               analysis-type 					:linear-static
               load-case-objects-list 			(list ^load-case-1)
               material-catalog-object 			^material-catalog
               materials-list 					(list (the material-name (:from ^material-selection)))
               property-set-objects-list 		(if ^export-surface?
													(list ^link-2D-material-properties)
													(list ^link-3D-material-properties)
													)
               
			   element-set-2d-objects-list 		(if ^export-surface? (list ^link-analysis-surface-elements) nil)
			   element-set-3d-objects-list 		(if ^export-surface? nil (list ^link-analysis-solid-elements))
				
			   export-surface? 					t 
				
               mesh-object 						(the link-mesh (:from ^mesh-model-object))
               node-set-objects-list 			(list (the node-set (:from ^mesh-model-object)))
			   
			   rigid-body-element-objects-list	(get-rigid-body-element-objects-list ^mesh-model-object)
			   
			   (material-selection :class 'option-property-class
					options-list (children ^^material-catalog)
					labels-list (loop for material in (children ^^material-catalog)
									collect (the material-name (:from material))
									)
					mode 'menu
					formula (nth 0 !options-list)
					label "Select Material"
					)
               )
  :subobjects (
               (material-catalog :class 'material-catalog-class
                   )
               (link-2D-material-properties :class 'analysis-property-set-2d-type-1-class
                   material-catalog-object ^^material-catalog
				   material-name (write-to-string (the material-name (:from ^material-selection)))
                   thickness 0.3
				   )
               (link-3D-material-properties :class 'analysis-property-set-3d-type-1-class
					material-catalog-object ^^material-catalog
				    material-name (write-to-string (the material-name (:from ^material-selection)))
					)
               (link-analysis-surface-elements :class 'analysis-element-set-2d-type-1-class
                   query-objects-list (list
                                       (the link-mesh-surface-elements (:from ^^mesh-model-object))
                                       )
                   property-set-object ^^link-2D-material-properties
				   )
               (link-analysis-solid-elements :class 'analysis-element-set-3d-type-1-class
                   query-objects-list (get-link-solid-mesh-elements-query-objects-list ^^mesh-model-object)
                   property-set-object ^^link-3D-material-properties
                   )
               
			   (fixed-nodes-constraint :class 'analysis-constraint-displacement-class
                   target-object (the fixed-nodes (:from ^^mesh-model-object))
                   tx 0.0
                   ty 0.0
                   tz 0.0
                   mx 0.0
                   my 0.0
                   mz 0.0
                   )
               (nodal-load :class 'analysis-load-force-nodal-class
                   target-object (the loaded-nodes
                                   (:from ^^mesh-model-object))
                   load-vector (list 0.0 0.0 ^^z-load)
                   )
               (load-case-1 :class 'analysis-load-case-class
;;;                    load-objects-list (list ^nodal-load)
;;;                    constraint-objects-list (list ^^fixed-nodes-constraint)
				   )
               (nastran-interface :class 'nastran-analysis-class
                   analysis-model-object ^superior
                   model-name (format nil "~a - ~a" (the folder (:from ^^mechanism-selection)) (the version-name (:from ^^version-selection)))
                   nastran-file-name (concatenate (write-to-string (object-name ^^superior)) ".bdf")
                   nastran-version (nth 2 '(:nei-nastran :msc-nastran :nx-nastran)) 
				   ;; could write 'nastran-version :nx-nastran' but this shows the available versions
                   )
               )
  )
  
(define-method property-classification-list analysis-link-model-class ()
  (list
   (list "Input Properties"
         '(
			material-selection
           ) 
         )
   )
  )
;-------------------------------------------------------------------------------------------------------------
; END analysis-link-model-class definitions
;-------------------------------------------------------------------------------------------------------------